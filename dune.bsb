;;;;{BSB GENERATED: NO EDIT
(subdir ./node_modules/seq/src
(rule
(targets  seq_alias.ast)
 (deps (:inputs  seq_alias.ml) )
(action
 (run bsc  -w a -bs-g -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  seq_alias.iast)
 (deps (:inputs  seq_alias.mli) )
(action
 (run bsc  -w a -bs-g -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  seq_alias.cmi seq_alias.cmti)
 (deps (:inputs  seq_alias.iast)  (:ast_deps .././src/seq_alias.ast .././src/seq_alias.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-re/node_modules/seq -cwd ./src %{ast_deps}) (run bsc -I .    -w a -o seq_alias.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  seq_alias.cmj seq_alias.cmt seq_alias.bs.js)
 (mode (promote (until-clean) (only seq_alias.bs.js)))(deps (:inputs  seq_alias.ast)  seq_alias.cmi (:ast_deps .././src/seq_alias.ast .././src/seq_alias.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-re/node_modules/seq -cwd ./src %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name seq -bs-package-output commonjs:./src:.bs.js -o seq_alias.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  seq_redef.ast)
 (deps (:inputs  seq_redef.ml) )
(action
 (run bsc  -w a -bs-g -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  seq_redef.iast)
 (deps (:inputs  seq_redef.mli) )
(action
 (run bsc  -w a -bs-g -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  seq_redef.cmi seq_redef.cmti)
 (deps (:inputs  seq_redef.iast)  (:ast_deps .././src/seq_redef.ast .././src/seq_redef.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-re/node_modules/seq -cwd ./src %{ast_deps}) (run bsc -I .    -w a -o seq_redef.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  seq_redef.cmj seq_redef.cmt seq_redef.bs.js)
 (mode (promote (until-clean) (only seq_redef.bs.js)))(deps (:inputs  seq_redef.ast)  seq_redef.cmi (:ast_deps .././src/seq_redef.ast .././src/seq_redef.iast) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-re/node_modules/seq -cwd ./src %{ast_deps}) (run bsc -bs-read-cmi -I .    -w a -bs-package-name seq -bs-package-output commonjs:./src:.bs.js -o seq_redef.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  select_version.ast)
 (deps (:inputs  select_version.ml) )
(action
 (run bsc  -w a -bs-g -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  select_version.cmj select_version.cmi select_version.cmt select_version.bs.js)
 (mode (promote (until-clean) (only select_version.bs.js)))(deps (:inputs  select_version.ast)  (:ast_deps .././src/select_version.ast ) ../bsconfig.json)
(action
 (progn (dynamic-run bsb_helper -root /Users/mando/Github/ocaml-re/node_modules/seq -cwd ./src %{ast_deps}) (run bsc -I .    -w a -bs-package-name seq -bs-package-output commonjs:./src:.bs.js -o select_version.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  select_version.bs.js seq_redef.bs.js seq_alias.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))


(subdir ./node_modules/seq(data_only_dirs .melange.eobjs))
(subdir ./node_modules/seq/.melange.eobjs)

(subdir ./src
(rule
(targets  re.ast)
 (deps (:inputs  re.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  re-Re.cmj re-Re.cmi re-Re.cmt re.bs.js)
 (mode (promote (until-clean) (only re.bs.js)))(deps (:inputs  re.ast)  (:ast_deps .././src/re.ast ) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o re-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  fmt.ast)
 (deps (:inputs  fmt.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  fmt-Re.cmj fmt-Re.cmi fmt-Re.cmt fmt.bs.js)
 (mode (promote (until-clean) (only fmt.bs.js)))(deps (:inputs  fmt.ast)  (:ast_deps .././src/fmt.ast ) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o fmt-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str.ast)
 (deps (:inputs  str.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str.iast)
 (deps (:inputs  str.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str-Re.cmi str-Re.cmti)
 (deps (:inputs  str.iast)  (:ast_deps .././src/str.ast .././src/str.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o str-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  str-Re.cmj str-Re.cmt str.bs.js)
 (mode (promote (until-clean) (only str.bs.js)))(deps (:inputs  str.ast)  str-Re.cmi (:ast_deps .././src/str.ast .././src/str.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o str-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core.ast)
 (deps (:inputs  core.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core.iast)
 (deps (:inputs  core.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core-Re.cmi core-Re.cmti)
 (deps (:inputs  core.iast)  (:ast_deps .././src/core.ast .././src/core.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o core-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  core-Re.cmj core-Re.cmt core.bs.js)
 (mode (promote (until-clean) (only core.bs.js)))(deps (:inputs  core.ast)  core-Re.cmi (:ast_deps .././src/core.ast .././src/core.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o core-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset.ast)
 (deps (:inputs  cset.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset.iast)
 (deps (:inputs  cset.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset-Re.cmi cset-Re.cmti)
 (deps (:inputs  cset.iast)  (:ast_deps .././src/cset.ast .././src/cset.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o cset-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  cset-Re.cmj cset-Re.cmt cset.bs.js)
 (mode (promote (until-clean) (only cset.bs.js)))(deps (:inputs  cset.ast)  cset-Re.cmi (:ast_deps .././src/cset.ast .././src/cset.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o cset-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob.ast)
 (deps (:inputs  glob.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob.iast)
 (deps (:inputs  glob.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob-Re.cmi glob-Re.cmti)
 (deps (:inputs  glob.iast)  (:ast_deps .././src/glob.ast .././src/glob.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o glob-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  glob-Re.cmj glob-Re.cmt glob.bs.js)
 (mode (promote (until-clean) (only glob.bs.js)))(deps (:inputs  glob.ast)  glob-Re.cmi (:ast_deps .././src/glob.ast .././src/glob.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o glob-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre.ast)
 (deps (:inputs  pcre.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre.iast)
 (deps (:inputs  pcre.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre-Re.cmi pcre-Re.cmti)
 (deps (:inputs  pcre.iast)  (:ast_deps .././src/pcre.ast .././src/pcre.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o pcre-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pcre-Re.cmj pcre-Re.cmt pcre.bs.js)
 (mode (promote (until-clean) (only pcre.bs.js)))(deps (:inputs  pcre.ast)  pcre-Re.cmi (:ast_deps .././src/pcre.ast .././src/pcre.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o pcre-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl.ast)
 (deps (:inputs  perl.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl.iast)
 (deps (:inputs  perl.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl-Re.cmi perl-Re.cmti)
 (deps (:inputs  perl.iast)  (:ast_deps .././src/perl.ast .././src/perl.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o perl-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  perl-Re.cmj perl-Re.cmt perl.bs.js)
 (mode (promote (until-clean) (only perl.bs.js)))(deps (:inputs  perl.ast)  perl-Re.cmi (:ast_deps .././src/perl.ast .././src/perl.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o perl-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Test.ast)
 (deps (:inputs  Test.re) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Test-Re.cmj Test-Re.cmi Test-Re.cmt Test.bs.js)
 (mode (promote (until-clean) (only Test.bs.js)))(deps (:inputs  Test.ast)  (:ast_deps .././src/Test.ast ) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-re-out -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o Test-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Util.ast)
 (deps (:inputs  Util.re) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  Util-Re.cmj Util-Re.cmi Util-Re.cmt Util.bs.js)
 (mode (promote (until-clean) (only Util.bs.js)))(deps (:inputs  Util.ast)  (:ast_deps .././src/Util.ast ) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-re-out -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o Util-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs.ast)
 (deps (:inputs  emacs.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs.iast)
 (deps (:inputs  emacs.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs-Re.cmi emacs-Re.cmti)
 (deps (:inputs  emacs.iast)  (:ast_deps .././src/emacs.ast .././src/emacs.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o emacs-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  emacs-Re.cmj emacs-Re.cmt emacs.bs.js)
 (mode (promote (until-clean) (only emacs.bs.js)))(deps (:inputs  emacs.ast)  emacs-Re.cmi (:ast_deps .././src/emacs.ast .././src/emacs.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o emacs-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group.ast)
 (deps (:inputs  group.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group.iast)
 (deps (:inputs  group.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group-Re.cmi group-Re.cmti)
 (deps (:inputs  group.iast)  (:ast_deps .././src/group.ast .././src/group.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o group-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  group-Re.cmj group-Re.cmt group.bs.js)
 (mode (promote (until-clean) (only group.bs.js)))(deps (:inputs  group.ast)  group-Re.cmi (:ast_deps .././src/group.ast .././src/group.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o group-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark.ast)
 (deps (:inputs  pmark.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark.iast)
 (deps (:inputs  pmark.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark-Re.cmi pmark-Re.cmti)
 (deps (:inputs  pmark.iast)  (:ast_deps .././src/pmark.ast .././src/pmark.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o pmark-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  pmark-Re.cmj pmark-Re.cmt pmark.bs.js)
 (mode (promote (until-clean) (only pmark.bs.js)))(deps (:inputs  pmark.ast)  pmark-Re.cmi (:ast_deps .././src/pmark.ast .././src/pmark.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o pmark-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix.ast)
 (deps (:inputs  posix.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix.iast)
 (deps (:inputs  posix.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix-Re.cmi posix-Re.cmti)
 (deps (:inputs  posix.iast)  (:ast_deps .././src/posix.ast .././src/posix.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o posix-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  posix-Re.cmj posix-Re.cmt posix.bs.js)
 (mode (promote (until-clean) (only posix.bs.js)))(deps (:inputs  posix.ast)  posix-Re.cmi (:ast_deps .././src/posix.ast .././src/posix.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o posix-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata.ast)
 (deps (:inputs  automata.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata.iast)
 (deps (:inputs  automata.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata-Re.cmi automata-Re.cmti)
 (deps (:inputs  automata.iast)  (:ast_deps .././src/automata.ast .././src/automata.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o automata-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  automata-Re.cmj automata-Re.cmt automata.bs.js)
 (mode (promote (until-clean) (only automata.bs.js)))(deps (:inputs  automata.ast)  automata-Re.cmi (:ast_deps .././src/automata.ast .././src/automata.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o automata-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category.ast)
 (deps (:inputs  category.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category.iast)
 (deps (:inputs  category.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category-Re.cmi category-Re.cmti)
 (deps (:inputs  category.iast)  (:ast_deps .././src/category.ast .././src/category.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o category-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  category-Re.cmj category-Re.cmt category.bs.js)
 (mode (promote (until-clean) (only category.bs.js)))(deps (:inputs  category.ast)  category-Re.cmi (:ast_deps .././src/category.ast .././src/category.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o category-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map.ast)
 (deps (:inputs  color_map.ml) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map.iast)
 (deps (:inputs  color_map.mli) )
(action
 (run bsc  -w a -bs-super-errors -bs-no-version-header -absname -bs-ast -o %{targets} %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map-Re.cmi color_map-Re.cmti)
 (deps (:inputs  color_map.iast)  (:ast_deps .././src/color_map.ast .././src/color_map.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -o color_map-Re.cmi %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 (rule
(targets  color_map-Re.cmj color_map-Re.cmt color_map.bs.js)
 (mode (promote (until-clean) (only color_map.bs.js)))(deps (:inputs  color_map.ast)  color_map-Re.cmi (:ast_deps .././src/color_map.ast .././src/color_map.iast) ../bsconfig.json ../.melange.eobjs/Re.cmi(alias ../node_modules/seq/src/bsb_world))
(action
 (progn (dynamic-run bsb_helper -bs-ns Re -root /Users/mando/Github/ocaml-re -cwd ./src %{ast_deps}) (run bsc -bs-ns Re -bs-read-cmi -I . -I ../.melange.eobjs -I ../node_modules/seq/src   -w a -bs-package-name ocaml-re -bs-package-output commonjs:./src:.bs.js -o color_map-Re.cmj %{inputs})))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 
(alias (name bsb_world)(deps  color_map.bs.js category.bs.js automata.bs.js posix.bs.js pmark.bs.js group.bs.js emacs.bs.js Util.bs.js Test.bs.js perl.bs.js pcre.bs.js glob.bs.js cset.bs.js core.bs.js str.bs.js fmt.bs.js re.bs.js)
(enabled_if (= %{ocaml_version} "4.12.0"))))

(subdir ./.melange.eobjs(rule
(targets  Re.cmi)
 (deps (:inputs  Re.mlmap) )
(action (run bsc -w -49 -color always -no-alias-deps %{inputs}))
(enabled_if (= %{ocaml_version} "4.12.0")) )
 )
(subdir .melange.eobjs)

(data_only_dirs node_modules .melange.eobjs)
(alias (name bsb_world))
;;;;BSB GENERATED: NO EDIT}
